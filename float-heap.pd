#N canvas 525 47 760 423 12;
#X obj 568 42 loadbang;
#X obj 65 42 inlet;
#X obj 582 182 array define \$0-a;
#X msg 582 157 resize 64 \, const 0;
#N canvas 401 29 799 637 push 0;
#X text 456 204 1 If array is full \, double its size \; 2 Add at end
\; 3 [until] to swap upward \; 4 Bang on end?;
#X obj 58 18 inlet;
#X text 105 17 2 numbers (priority and value);
#N canvas 445 269 660 388 getIndex 0;
#X obj 62 42 inlet;
#X obj 62 67 t b b, f 21;
#X obj 206 91 array size \$0-a;
#X obj 62 92 value \$0-size;
#X obj 62 151 moses, f 21;
#X obj 206 176 t f b, f 21;
#X obj 350 201 f;
#X obj 206 116 t f f, f 24;
#X obj 350 226 * 2;
#X obj 350 251 array size \$0-a;
#X obj 107 234 t f f;
#X obj 139 259 + 2;
#X obj 139 284 value \$0-size;
#X obj 107 327 outlet;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 10 0;
#X connect 4 1 5 0;
#X connect 5 0 10 0;
#X connect 5 1 6 0;
#X connect 6 0 8 0;
#X connect 7 0 4 1;
#X connect 7 1 6 1;
#X connect 8 0 9 0;
#X connect 10 0 13 0;
#X connect 10 1 11 0;
#X connect 11 0 12 0;
#X restore 545 77 pd getIndex;
#X obj 423 152 array set \$0-a;
#X obj 179 152 f;
#X obj 545 102 t f f;
#X obj 179 116 until;
#X text 371 389 compare parent > this \; if true \, swap;
#X obj 58 52 t b b a a b, f 70;
#X obj 211 91 r \$0-stop-up;
#X obj 348 152 unpack f;
#X obj 225 390 >, f 18;
#X text 132 151 index;
#X obj 373 478 f;
#X obj 225 207 t f f;
#X obj 225 232 - 2;
#X obj 225 257 div 4;
#X obj 225 282 * 2;
#X obj 225 307 t f f;
#X obj 306 478 f;
#X msg 225 340 \$1 1;
#X obj 225 365 array get \$0-a;
#X obj 225 415 select 0 1;
#X obj 179 479 s \$0-stop-up;
#X obj 179 182 moses 1;
#X msg 179 207 bang;
#X obj 214 152 r \$0-parent;
#X obj 306 453 t b b, f 10;
#X obj 306 503 t f f;
#X obj 306 554 s \$0-parent;
#X obj 58 554 outlet;
#N canvas 0 0 450 300 swap2 0;
#X obj 59 40 inlet;
#X obj 59 65 t f f;
#X obj 90 90 + 1;
#X obj 59 156 pack f f f f, f 14;
#X obj 122 40 inlet;
#X obj 122 65 t f f;
#X obj 153 90 + 1;
#X msg 59 181 \$2 \$4 \, \$1 \$3;
#X obj 59 206 array-swap \$0-a;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 3 1;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 3 2;
#X connect 5 1 6 0;
#X connect 6 0 3 3;
#X connect 7 0 8 0;
#X restore 338 528 pd swap2;
#X connect 1 0 9 0;
#X connect 3 0 6 0;
#X connect 5 0 25 0;
#X connect 6 0 5 1;
#X connect 6 1 4 1;
#X connect 7 0 5 0;
#X connect 9 0 31 0;
#X connect 9 1 7 0;
#X connect 9 2 11 0;
#X connect 9 3 4 0;
#X connect 9 4 3 0;
#X connect 10 0 7 1;
#X connect 11 0 12 1;
#X connect 12 0 23 0;
#X connect 14 0 32 1;
#X connect 15 0 16 0;
#X connect 15 1 14 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 19 1 20 1;
#X connect 20 0 29 0;
#X connect 21 0 22 0;
#X connect 22 0 12 0;
#X connect 23 0 24 0;
#X connect 23 1 28 0;
#X connect 25 0 26 0;
#X connect 25 1 15 0;
#X connect 26 0 24 0;
#X connect 27 0 5 1;
#X connect 28 0 20 0;
#X connect 28 1 14 0;
#X connect 29 0 30 0;
#X connect 29 1 32 0;
#X restore 65 92 pd push;
#X obj 480 106 r \$0-reset;
#X obj 480 131 t b b, f 15;
#X msg 480 157 0;
#X obj 480 182 value \$0-size;
#X obj 568 67 s \$0-reset;
#X msg 241 92 bang;
#X obj 241 117 s \$0-reset;
#X obj 65 67 route push pop top clear debug, f 44;
#X msg 309 262 0;
#X obj 309 287 array get \$0-a;
#X obj 61 341 outlet;
#N canvas 456 29 709 638 pop 0;
#X text 374 545 1 Save output list \; 2 Move tail 2 up to 0 \; 3 Loop:
check lesser of children \; if lesser is less than promoted prio \,
swap \; 4 Bang output;
#X obj 48 33 inlet;
#X msg 486 464 0 2;
#X obj 486 489 array get \$0-a;
#X obj 48 575 outlet;
#X obj 48 550 list;
#N canvas 468 133 450 445 moveUp 0;
#X obj 40 53 inlet;
#X text 222 26 decrement size by 2 \; get there \, set 0;
#X msg 40 78 bang;
#X obj 40 103 value \$0-size;
#X obj 85 153 - 2;
#X msg 85 231 \$1 2;
#X obj 85 178 t f f;
#X obj 117 203 value \$0-size;
#X obj 40 128 moses 2;
#X obj 26 354 outlet;
#X obj 78 354 outlet;
#X obj 85 281 t a a b;
#X msg 227 329 0;
#X obj 180 354 array set \$0-a;
#X obj 85 256 array get \$0-a;
#X msg 40 153 bang;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 6 0;
#X connect 5 0 14 0;
#X connect 6 0 5 0;
#X connect 6 1 7 0;
#X connect 8 0 15 0;
#X connect 8 1 4 0;
#X connect 11 0 9 0;
#X connect 11 1 13 0;
#X connect 11 2 12 0;
#X connect 12 0 13 1;
#X connect 14 0 11 0;
#X connect 15 0 10 0;
#X restore 194 97 pd moveUp;
#X obj 254 575 outlet;
#X obj 254 122 t b b;
#X msg 286 153 0;
#X obj 48 58 t b b b b, f 63;
#X msg 340 153 1;
#X obj 48 208 spigot;
#X text 270 203 if nothing to return \, block the rest of the logic
, f 23;
#N canvas 328 42 607 639 pushDown 0;
#X obj 41 33 inlet;
#X obj 236 33 inlet;
#X text 327 52 R inlet is "moving" pair \; start at index 0 \; get
2 children prio \; which is lesser? \; then compare that to "moving"
\; if lesser child < moving \, swap \; else stop;
#X obj 236 58 unpack f;
#X obj 192 401 <, f 20;
#X obj 41 58 t b b, f 11;
#X msg 115 83 0;
#X obj 41 182 f, f 11;
#X obj 41 148 until;
#X obj 73 123 r \$0-stop-down;
#N canvas 456 77 753 564 lesserIndex 0;
#X obj 37 22 inlet;
#X obj 37 47 t f b, f 45;
#X obj 349 72 value \$0-size;
#X obj 37 72 * 2;
#X obj 37 507 outlet;
#X msg 349 459 bang;
#X obj 37 460 f, f 13;
#X obj 212 460 f, f 13;
#X obj 37 97 + 2;
#X obj 349 97 t f f;
#X text 429 116 logic should be \; 1 check i * 2 + 2 vs size \; 2 if
>= \, send bang and stop \; 3 else \, get from array \; 4 + another
2 and check vs size \; 5 if >= \, send first index and stop \; 6 else
compare;
#X text 215 493 i*2 + 2;
#X obj 37 122 moses, f 45;
#X obj 37 147 t f f f, f 35;
#X msg 158 173 \$1 1;
#X obj 158 198 array get \$0-a;
#X obj 37 370 >=;
#X obj 37 395 select 0 1;
#X obj 37 198 + 2;
#X obj 37 223 moses, f 41;
#X msg 307 373 bang;
#X msg 37 274 \$1 1;
#X obj 37 299 array get \$0-a;
#X obj 37 248 t f f, f 23;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 9 0;
#X connect 3 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 8 0 12 0;
#X connect 9 0 12 1;
#X connect 9 1 19 1;
#X connect 12 0 13 0;
#X connect 12 1 5 0;
#X connect 13 0 18 0;
#X connect 13 1 14 0;
#X connect 13 2 7 1;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X connect 17 0 6 0;
#X connect 17 1 7 0;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 19 1 20 0;
#X connect 20 0 7 0;
#X connect 21 0 22 0;
#X connect 22 0 16 0;
#X connect 23 0 21 0;
#X connect 23 1 6 1;
#X restore 41 242 pd lesserIndex;
#X obj 41 301 route bang, f 22;
#X obj 41 326 s \$0-stop-down;
#X obj 192 326 t f f;
#X msg 192 351 \$1 1;
#X obj 192 376 array get \$0-a;
#X obj 192 426 select 0 1, f 15;
#X obj 41 207 t f f, f 64;
#X obj 243 507 f, f 21;
#X obj 275 481 f, f 30;
#X obj 243 455 t b b;
#N canvas 0 0 450 380 swap2 0;
#X obj 59 7 inlet;
#X obj 59 65 t f f;
#X obj 90 90 + 1;
#X obj 59 156 pack f f f f, f 14;
#X obj 122 40 inlet;
#X obj 122 65 t f f;
#X obj 153 90 + 1;
#X msg 59 181 \$2 \$4 \, \$1 \$3;
#X obj 59 206 array-swap \$0-a;
#X obj 59 32 t b f;
#X msg 42 248 0;
#X obj 42 273 array get \$0-a;
#X connect 0 0 9 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 3 1;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 3 2;
#X connect 5 1 6 0;
#X connect 6 0 3 3;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 9 1 1 0;
#X connect 10 0 11 0;
#X restore 243 541 pd swap2;
#X obj 192 580 s \$0-stop-down;
#X msg 41 83 10;
#X obj 41 267 t a f, f 50;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 3 0 4 1;
#X connect 4 0 16 0;
#X connect 5 0 23 0;
#X connect 5 1 6 0;
#X connect 6 0 7 1;
#X connect 7 0 17 0;
#X connect 8 0 7 0;
#X connect 9 0 8 1;
#X connect 10 0 24 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 13 0 14 0;
#X connect 13 1 7 1;
#X connect 14 0 15 0;
#X connect 15 0 4 0;
#X connect 16 0 22 0;
#X connect 16 1 20 0;
#X connect 17 0 10 0;
#X connect 17 1 19 1;
#X connect 18 0 21 0;
#X connect 19 0 21 1;
#X connect 20 0 18 0;
#X connect 20 1 19 0;
#X connect 23 0 8 0;
#X connect 24 0 11 0;
#X connect 24 1 18 1;
#X restore 80 297 pd pushDown;
#X obj 48 233 t b b;
#X obj 283 285 r enablepushdown;
#X obj 80 262 spigot 1;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 5 1;
#X connect 5 0 4 0;
#X connect 6 0 14 1;
#X connect 6 1 8 0;
#X connect 8 0 7 0;
#X connect 8 1 9 0;
#X connect 9 0 12 1;
#X connect 10 0 12 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 10 3 2 0;
#X connect 11 0 12 1;
#X connect 12 0 15 0;
#X connect 15 0 5 0;
#X connect 15 1 17 0;
#X connect 16 0 17 1;
#X connect 17 0 14 0;
#X restore 126 92 pd pop;
#X obj 309 237 t b b, f 18;
#X obj 432 262 value \$0-size;
#X msg 432 287 size = \$1;
#X obj 227 341 outlet;
#X obj 372 341 print;
#N canvas 115 271 450 300 top 0;
#X obj 52 43 inlet;
#X msg 52 68 bang;
#X obj 52 93 value \$0-size;
#X obj 52 118 moses 2, f 20;
#X obj 189 167 array get \$0-a;
#X msg 189 143 0 2;
#X obj 52 247 outlet;
#X msg 52 143 bang;
#X obj 189 247 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 7 0 8 0;
#X restore 187 158 pd top;
#X obj 125 341 outlet;
#X text 56 363 top/pop result, f 8;
#X text 126 363 new top after change, f 12;
#X text 227 363 bang on empty, f 7;
#N canvas 115 271 450 300 topChange 0;
#X obj 52 43 inlet;
#X msg 52 68 bang;
#X obj 52 93 value \$0-size;
#X obj 52 118 moses 2, f 20;
#X obj 189 167 array get \$0-a;
#X msg 189 143 0 2;
#X obj 52 247 outlet;
#X msg 52 143 bang;
#X obj 189 247 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 7 0 8 0;
#X restore 65 158 pd topChange;
#X obj 126 117 t a b;
#X connect 0 0 9 0;
#X connect 1 0 12 0;
#X connect 3 0 2 0;
#X connect 4 0 27 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 3 0;
#X connect 7 0 8 0;
#X connect 10 0 11 0;
#X connect 12 0 4 0;
#X connect 12 1 16 0;
#X connect 12 2 22 0;
#X connect 12 3 10 0;
#X connect 12 4 17 0;
#X connect 13 0 14 0;
#X connect 14 0 21 0;
#X connect 16 0 28 0;
#X connect 16 1 20 0;
#X connect 17 0 13 0;
#X connect 17 1 18 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 22 0 15 0;
#X connect 22 1 20 0;
#X connect 27 0 23 0;
#X connect 27 1 23 0;
#X connect 28 0 15 0;
#X connect 28 1 27 0;
